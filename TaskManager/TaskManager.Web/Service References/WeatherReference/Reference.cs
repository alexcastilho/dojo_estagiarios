//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManager.Web.WeatherReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class Weather : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherReference.WeatherConsultingSoap")]
    public interface WeatherConsultingSoap {
        
        // CODEGEN: Generating message contract since element name city from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeather", ReplyAction="*")]
        TaskManager.Web.WeatherReference.GetWeatherResponse GetWeather(TaskManager.Web.WeatherReference.GetWeatherRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWeather", ReplyAction="*")]
        System.Threading.Tasks.Task<TaskManager.Web.WeatherReference.GetWeatherResponse> GetWeatherAsync(TaskManager.Web.WeatherReference.GetWeatherRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWeatherRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWeather", Namespace="http://tempuri.org/", Order=0)]
        public TaskManager.Web.WeatherReference.GetWeatherRequestBody Body;
        
        public GetWeatherRequest() {
        }
        
        public GetWeatherRequest(TaskManager.Web.WeatherReference.GetWeatherRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetWeatherRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string city;
        
        public GetWeatherRequestBody() {
        }
        
        public GetWeatherRequestBody(string city) {
            this.city = city;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWeatherResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWeatherResponse", Namespace="http://tempuri.org/", Order=0)]
        public TaskManager.Web.WeatherReference.GetWeatherResponseBody Body;
        
        public GetWeatherResponse() {
        }
        
        public GetWeatherResponse(TaskManager.Web.WeatherReference.GetWeatherResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetWeatherResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public TaskManager.Web.WeatherReference.Weather GetWeatherResult;
        
        public GetWeatherResponseBody() {
        }
        
        public GetWeatherResponseBody(TaskManager.Web.WeatherReference.Weather GetWeatherResult) {
            this.GetWeatherResult = GetWeatherResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WeatherConsultingSoapChannel : TaskManager.Web.WeatherReference.WeatherConsultingSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherConsultingSoapClient : System.ServiceModel.ClientBase<TaskManager.Web.WeatherReference.WeatherConsultingSoap>, TaskManager.Web.WeatherReference.WeatherConsultingSoap {
        
        public WeatherConsultingSoapClient() {
        }
        
        public WeatherConsultingSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherConsultingSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherConsultingSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherConsultingSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TaskManager.Web.WeatherReference.GetWeatherResponse TaskManager.Web.WeatherReference.WeatherConsultingSoap.GetWeather(TaskManager.Web.WeatherReference.GetWeatherRequest request) {
            return base.Channel.GetWeather(request);
        }
        
        public TaskManager.Web.WeatherReference.Weather GetWeather(string city) {
            TaskManager.Web.WeatherReference.GetWeatherRequest inValue = new TaskManager.Web.WeatherReference.GetWeatherRequest();
            inValue.Body = new TaskManager.Web.WeatherReference.GetWeatherRequestBody();
            inValue.Body.city = city;
            TaskManager.Web.WeatherReference.GetWeatherResponse retVal = ((TaskManager.Web.WeatherReference.WeatherConsultingSoap)(this)).GetWeather(inValue);
            return retVal.Body.GetWeatherResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TaskManager.Web.WeatherReference.GetWeatherResponse> TaskManager.Web.WeatherReference.WeatherConsultingSoap.GetWeatherAsync(TaskManager.Web.WeatherReference.GetWeatherRequest request) {
            return base.Channel.GetWeatherAsync(request);
        }
        
        public System.Threading.Tasks.Task<TaskManager.Web.WeatherReference.GetWeatherResponse> GetWeatherAsync(string city) {
            TaskManager.Web.WeatherReference.GetWeatherRequest inValue = new TaskManager.Web.WeatherReference.GetWeatherRequest();
            inValue.Body = new TaskManager.Web.WeatherReference.GetWeatherRequestBody();
            inValue.Body.city = city;
            return ((TaskManager.Web.WeatherReference.WeatherConsultingSoap)(this)).GetWeatherAsync(inValue);
        }
    }
}
